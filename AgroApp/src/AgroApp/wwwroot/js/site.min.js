var agroApp = angular.module("AgroApp"); agroApp.controller("LoginView", function (e, n) { var o; e.openMenu = function (e, n) { o = n, e(n) } }), agroApp.controller("AppCtrl", function (e, n, o, r) { function t(o, r, t) { var i; return function () { var t = e, a = Array.prototype.slice.call(arguments); n.cancel(i), i = n(function () { i = void 0, o.apply(t, a) }, r || 10) } } function i(e) { return t(function () { o(e).toggle().then(function () { r.debug("toggle " + e + " is done") }) }, 200) } e.toggleLeft = i("left") }), agroApp.controller("LeftCtrl", function (e, n, o, r) { e.close = function () { o("left").close().then(function () { r.debug("close LEFT is done") }) } }), agroApp.controller("UserEdit", function (e, n, o, r) { e.rollen = ["Gebruiker", "Admin"], e.showConfirmArchiveDialog = function (e) { o.showloading++; var n = r.confirm().title("Gebruiker Verwijderen").textContent("Als u doorgaat zal de machine definitief verwijderd worden!").targetEvent(e).ok("Gebruiker Archiveren").cancel("Annuleer"); r.show(n).then(function () { i() }, function () { o.showloading-- }) }, e.showConfirmChangePasswordDialog = function (e) { o.showloading++; var n = r.confirm().title("Als u doorgaat zal het wachtwoord van deze gebruiker gereset worden!").textContent("Het nieuwe wachtwoord zal op het scherm getoond worden. Geef deze aan de medewerker door!").targetEvent(e).ok("Reset").cancel("Annuleer"); r.show(n).then(function () { o.showloading-- }, function () { o.showloading-- }) }, e.showConfirmChangesDialog = function (e) { o.showloading++; var n = r.confirm().title("Wijzigingen Toepassen?").textContent("Als u doorgaat zullen de wijzigingen opgeslagen worden!").targetEvent(e).ok("Wijzigingen Toepassen").cancel("Annuleer"); r.show(n).then(function () { t() }, function () { o.showloading-- }) }, e.ArchiefGebruikers = [], e.getArchiefUserData = function () { o.showloading++, n({ method: "GET", url: "/api/account/getarchiefusers", params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { e.ArchiefGebruikers = n, o.showloading-- }) }, e.gebruikerid = 0, e.ConfirmReAdd = function (n) { e.gebruikerid = n, e.showConfirmReAddDialog() }, e.showConfirmReAddDialog = function (e) { o.showloading++; var n = r.confirm().title("Gebruiker dearchiveren").textContent("Als u doorgaat zal deze gebruiker gedearchiveerd worden!").targetEvent(e).ok("Dearchiveren").cancel("Annuleer"); r.show(n).then(function () { a() }, function () { o.showloading-- }) }; var t = function () { o.showLoading = !0, n({ method: "GET", url: "/api/user/wijzigen/" + e.userDetails.id + "/" + e.userDetails.naam + "/" + e.userDetails.email + "/" + e.userDetails.rol, params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { 1 == n ? o.changeView("admin/gebruikers") : (o.showLoading = !1, e.showError = !0, e.errorMessage = "De opgegeven waardes zijn ongeldig") }).error(function () { o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is iets misgegaan! Probeer het opnieuw of neem contact op met een beheerder" }) }, i = function () { o.showLoading = !0, n({ method: "GET", url: "/api/user/archiveren/" + e.userDetails.id, params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { 1 == n ? o.changeView("admin/gebruikerbeheer") : (o.showLoading = !1, e.showError = !0, e.errorMessage = "De opgegeven waardes zijn ongeldig") }).error(function () { o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is iets misgegaan! Probeer het opnieuw of neem contact op met een beheerder" }) }, a = function () { n({ method: "GET", url: "/api/user/gebruikerbeheer/terughalen/" + e.gebruikerid, params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { 1 == n ? o.changeView("admin/gebruikerbeheer") : (o.showLoading = !1, e.showError = !0, e.errorMessage = "De opgegeven waardes zijn ongeldig") }).error(function () { o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is iets misgegaan! Probeer het opnieuw of neem contact op met een beheerder" }) } }), agroApp.controller("VehicleEdit", function (e, n, o, r) { e.types = ["Kraan", "Shovel", "Trekker", "Dumper", "Wagen", "Tank", "Ladewagen", "Strandreiniging", "Gladheid", "Auto", "Apparaat", "Trilplaat", "Meetapparatuur", "Aanhanger", "Hulpstuk", "Overige"], e.showConfirmChangesDialog = function (e) { o.showloading++; var n = r.confirm().title("Wijzigingen Toepassen?").textContent("Als u doorgaat zullen de wijzigingen opgeslagen worden!").targetEvent(e).ok("Wijzigingen Toepassen").cancel("Annuleer"); r.show(n).then(function () { t() }, function () { o.showloading-- }) }, e.showConfirmDeleteDialog = function (e) { o.showloading++; var n = r.confirm().title("Machine Verwijderen").textContent("Als u doorgaat zal de machine definitief verwijderd worden!").targetEvent(e).ok("Machine Verwijderen").cancel("Annuleer"); r.show(n).then(function () { i() }, function () { o.showloading-- }) }, e.ArchiefMachines = [], e.getArchiefMachines = function () { o.showloading++, n({ method: "GET", url: "/api/werkbon/getarchiefmachine", params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { e.ArchiefMachines = n, o.showloading-- }) }, e.machineid = 0, e.ConfirmReAdd = function (n) { e.machineid = n, e.showConfirmReAddDialog() }, e.showConfirmReAddDialog = function (e) { o.showloading++; var n = r.confirm().title("Machine dearchiveren").textContent("Als u doorgaat zal deze machine gedearchiveerd worden!").targetEvent(e).ok("Dearchiveren").cancel("Annuleer"); r.show(n).then(function () { a() }, function () { o.showloading-- }) }, e.AddMachine = function () { o.showLoading = !0, n({ method: "GET", url: "/api/werkbon/addmachine/" + e.machineDetails.naam + "/" + e.machineDetails.nummer + "/" + e.machineDetails.kenteken + "/" + e.machineDetails.type, params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { 1 == n ? o.changeView("admin/machinebeheer") : (o.showLoading = !1, e.showError = !0, e.errorMessage = "Het machinenummer is al geregistreerd") }).error(function () { o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is iets misgegaan! Probeer het opnieuw of neem contact op met een beheerder" }) }; var t = function () { o.showLoading = !0, n({ method: "GET", url: "/api/werkbon/editmachine/" + e.machineDetails.id + "/" + e.machineDetails.naam + "/" + e.machineDetails.nummer + "/" + e.machineDetails.kenteken + "/" + e.machineDetails.cato, params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { 1 == n ? o.changeView("admin/machinebeheer") : (o.showLoading = !1, e.showError = !0, e.errorMessage = "De opgegeven waardes zijn ongeldig") }).error(function () { o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is iets misgegaan! Probeer het opnieuw of neem contact op met een beheerder" }) }, i = function () { o.showLoading = !0, n({ method: "GET", url: "/api/werkbon/deletemachine/" + e.machineDetails.id, params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { 1 == n ? o.changeView("admin/machinebeheer") : (o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is geen machine geselecteerd!") }).error(function () { o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is iets misgegaan! Probeer het opnieuw of neem contact op met een beheerder" }) }, a = function () { o.showLoading = !0, n({ method: "GET", url: "/api/werkbon/machine/terughalen/" + e.machineid, params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { 1 == n ? o.changeView("admin/machinebeheer") : (o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is geen machine geselecteerd!") }).error(function () { o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is iets misgegaan! Probeer het opnieuw of neem contact op met een beheerder" }) } }), agroApp.controller("KlantEdit", function (e, n, o, r) { e.showConfirmChangesDialog = function (e) { o.showloading++; var n = r.confirm().title("Wijzigingen Toepassen?").textContent("Als u doorgaat zullen de wijzigingen opgeslagen worden!").targetEvent(e).ok("Wijzigingen Toepassen").cancel("Annuleer"); r.show(n).then(function () { i() }, function () { o.showloading-- }) }, e.showConfirmDeleteDialog = function (e) { o.showloading++; var n = r.confirm().title("Klant Archiveren").textContent("Als u doorgaat zal deze klant gearchiveerd worden!").targetEvent(e).ok("Klant Archiveren").cancel("Annuleer"); r.show(n).then(function () { a() }, function () { o.showloading-- }) }, e.klantid = 0, e.ConfirmReAdd = function (n) { e.klantid = n, e.showConfirmReAddDialog() }, e.showConfirmReAddDialog = function (e) { o.showloading++; var n = r.confirm().title("Klant Dearchiveren").textContent("Als u doorgaat zal deze klant gedearchiveerd worden").targetEvent(e).ok("Dearchiveren").cancel("Annuleer"); r.show(n).then(function () { t() }, function () { o.showloading-- }) }, e.AddKlant = function () { o.showLoading = !0, n({ method: "GET", url: "/api/werkbon/addklant/" + e.klantDetails.naam + "/" + e.klantDetails.adres, params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { 1 == n ? o.changeView("admin/klantbeheer") : (o.showLoading = !1, e.showError = !0, e.errorMessage = "Deze klant is al geregistreerd!") }).error(function () { o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is iets misgegaan! Probeer het opnieuw of neem contact op met een beheerder" }) }; var t = function () { o.showLoading = !0, n({ method: "GET", url: "/api/werkbon/klant/terughalen/" + e.klantid, params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { 1 == n ? o.changeView("admin/klantbeheer") : (o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is geen klant geselecteerd!") }).error(function () { o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is iets misgegaan! Probeer het opnieuw of neem contact op met een beheerder" }) }; e.selectedKlanten = [], e.klanten = [], e.getKlanten = function () { o.showLoading = !0, n({ method: "GET", url: "/api/werkbon/getklanten", params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { e.klanten = n }) }, e.ArchiefKlanten = [], e.getArchiefKlanten = function () { o.showLoading = !0, n({ method: "GET", url: "/api/werkbon/getarchiefklanten", params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { e.ArchiefKlanten = n }) }; var i = function () { o.showLoading = !0, n({ method: "GET", url: "/api/werkbon/editklant/" + e.klantDetails.id + "/" + e.klantDetails.naam + "/" + e.klantDetails.adres, params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { 1 == n ? o.changeView("admin/klantbeheer") : (o.showLoading = !1, e.showError = !0, e.errorMessage = "De opgegeven waardes zijn ongeldig") }).error(function () { o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is iets misgegaan! Probeer het opnieuw of neem contact op met een beheerder" }) }, a = function () { o.showLoading = !0, n({ method: "GET", url: "/api/werkbon/deleteklant/" + e.klantDetails.id, params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { 1 == n ? o.changeView("admin/klantbeheer") : (o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is geen klant geselecteerd!") }).error(function () { o.showLoading = !1, e.showError = !0, e.errorMessage = "Er is iets misgegaan! Probeer het opnieuw of neem contact op met een beheerder" }) } }), agroApp.controller("WerkbonEdit", function (e, n, o) { "use strict"; function r(e, n) { return e ? n.filter(t(e)) : n } function t(e) { var n = angular.lowercase(e); return function (e) { return 0 === e.Name.toLowerCase().indexOf(n) } } var i = this; n.showloading = 0, e.getManKeuzeData = function () { n.showLoading = !0, o({ method: "GET", url: "/api/werkbon/getmankeuze", params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { e.man = n }) }, e.checkRole = function () { changeView(User.IsInRole("Administrator") ? "admin/main" : "werknemer/menu") }, e.selectedMachines = [], e.selectedUsers = [], e.machines = [], e.selectedGewichten = [], e.gewichten = ["Zand", "Gemengde grond", "Gezeefde grond", "Woudgrond", "Compost", "Menggranulaat", "Kleischelpen", "Schone schelpen", "Houtchips"], e.getMachines = function () { n.showLoading = !0, o({ method: "GET", url: "/api/werkbon/getmachines", params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { e.machines = n }) }, e.increaseSelectedMachineList = function () { e.selectedMachines.push(e.machines[0]) }, e.decreaseSelectedMachineList = function () { e.selectedMachines.pop() }, e.increaseSelectedGewichtenList = function () { e.selectedGewichten.push(e.gewichten[0]) }, e.decreaseSelectedGewichtenList = function () { e.selectedGewichten.pop() }, e.increaseSelectedUserList = function () { e.selectedUsers.push(e.gebruikers[0]) }, e.decreaseSelectedUsersList = function () { e.selectedUsers.pop() }, e.selectedHulpstukken = [], e.hulpstukken = [], e.getHulpstukken = function () { n.showLoading = !0, o({ method: "GET", url: "/api/werkbon/gethulpstukken", params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { e.hulpstukken = n }) }, i.selectedGebruikers = [], i.gebruikers = [], e.getAllUserData = function () { n.showLoading++, o({ method: "GET", url: "/api/account/getfulllist", params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (e) { i.gebruikers = e, n.showLoading-- }).error(function (e) { n.showLoading-- }) }, i.selectedCustomer = "", i.klanten = [], e.getKlanten = function (e) { n.showloading++, o({ method: "GET", url: "/api/werkbon/getklanten", params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (e) { i.klanten = e, n.showloading-- }).error(function (o) { e.showSimple("Kon klanten niet inladen! Ververs de pagina"), n.showloading-- }) }, e.submitWerkbonAdd = function () { console.log(e.selectedMachines) }, e.submitWerkbon = function () { n.showloading++; var r = JSON.stringify({ Gebruiker: e.selectedGebruiker, Datum: e.opdracht.datum, Klant: e.klant, ManKeuze: e.manKeuze, Machines: e.selectedMachines, Hulpstukken: e.selectedHulpstukken, VanTijd: e.werktijd.van, TotTijd: e.werktijd.tot, TotaalTijd: e.werktijd.urenTotaal, verbruiktematerialen: e.werktijd.verbruikteMaterialen, Gewichten: e.selectedGewichten, opmerking: e.werktijd.opmerking, IdOpdrachtWerknemer: e.werknemerOpdracht.id }); o.post("/api/werkbon/toevoegen", r).success(function (e, o, r, t) { n.showloading--, n.changeView("admin/planning") }) }, e.submitOpdracht = function () { n.showloading++; var r = JSON.stringify({ klant: i.selectedCustomer, gebruikers: i.selectedGebruiker, locatie: e.opdracht.adres, beschrijving: e.opdracht.omschrijving, datum: e.opdracht.datum }); o.post("/api/opdracht/toevoegen", r).success(function (e, o, r, t, i) { n.showloading--, n.showMessage = !0, n.message = "Opdracht succesvol toegevoegd!", i(function () { n.showMessage = !1 }, 5e3) }).error(function (e, o) { n.showMessage = !0, n.message = "Er ging iets mis! " + e, o(function () { n.showMessage = !1 }, 5e3) }) }, e.onUrenChange = function (n) { if (n) e.werktijd.van = new Date(1970, 1, 1, 0, 0, 0, 0), e.werktijd.tot = new Date(1970, 1, 1, 0, 0, 0, 0); else { var o = e.werktijd.tot - e.werktijd.van, r = o / 1e3, t = r / 60, i = t / 60; e.werktijd.urenTotaal = new Date(1970, 1, 1, i % 24, t % 60, 0, 0) } }, e.onGewichtChange = function (n) { n ? (e.gewicht.vol = new Number(0), e.gewicht.leeg = new Number(0)) : e.gewicht.netto = e.gewicht.vol - e.gewicht.leeg }, i.querySearch = r, i.machineSelectie = [], i.selectedMachine = "", e.querySearchNaam = function (n, o) { return n ? o.filter(e.createFilterForNaam(n)) : o }, e.createFilterForNaam = function (e) { var n = angular.lowercase(e); return function (e) { return 0 === e.Naam.toLowerCase().indexOf(n) } } }), agroApp.controller("WerknemerEdit", function (e, n, o, r) { e.showConfirmChangePasswordDialog = function (e) { o.showloading++; var n = r.confirm().title("Als u doorgaat zal het wachtwoord worden veranderd.").targetEvent(e).ok("Wijzig").cancel("Annuleer"); r.show(n).then(function () { o.showloading-- }, function () { o.showloading-- }) } }), agroApp.controller("WerkbonView", function (e, n, o, r) { e.werkbonnen = [], e.getWerkbonnen = function () { o.showLoading = !0, n({ method: "GET", url: "/werknemer/getwerkbonnen", params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { e.werkbonnen = n }) } }), agroApp.controller("OpdrachtView", function (e, n, o, r) { e.WerknemerOpdrachten = [], e.getGebruikerOpdrachten = function () { o.showloading++, n.get("/werknemer/getgebruikeropdrachten").success(function (n) { console.log(n), e.WerknemerOpdrachten = n, o.showloading-- }) }, e.werknemeropdrachten = [], e.getOpdrachtWerknemer = function () { o.showloading++, n.get("/werknemer/getopdrachtwerknemer/").success(function (n) { console.log(n), e.opdrachten = n, o.showloading-- }) } }), agroApp.controller("PlanningView", ["$scope", "$http", "$rootScope", "$timeout", function (e, n, o, r) { e.gebruikerTijden = [], e.geselecteerdeDagDatum = new Date, e.geselecteerdeWeekDatum = new Date, o.showLoading = 0, e.updateGebruikersDag = function (r) { o.showLoading++, n.get("/api/planning/getGebruikersWerktijden/" + e.geselecteerdeDagDatum.getTime()).success(function (n) { e.gebruikerTijden = n, o.showLoading-- }).error(function (e, n) { o.showLoading--, setMessage(o, n, "Er is iets misgegaan bij het ophalen van de gebruikers") }) }, e.updateGebruikersWeek = function () { e.weekNummer = e.geselecteerdeWeekDatum.getWeek() }, e.tijden = [], e.setTijdenRange = function () { for (e.tijden = [], uur = 6; uur <= 20; uur++) e.tijden.push(uur + ":00"), 20 != uur && e.tijden.push(uur + ":30") }, e.opdrachten = [], e.getOpdrachten = function () { o.showLoading++, n.get("/api/opdracht/alle/false").success(function (n) { e.opdrachten = n, o.showLoading-- }).error(function (e) { o.showLoading--, setMessage(o, r, "Er is iets misgegaan bij het ophalen van de opdrachten") }) }, e.opdrachtGeenDatumFilter = function (e) { return null === e.datum }, e.opdrachtGeenWerknemersFilter = function (e) { return 0 === e.gebruikerCount }, e.opdrachtLopendFilter = function (e) { var n = new Date(e.datum); return null != e.datum && 0 != e.gebruikerCount && n.getTime() <= (new Date).getTime() }, e.opdrachtGeplandFilter = function (e) { var n = new Date(e.datum); return null != e.datum && 0 != e.gebruikerCount && n.getTime() > (new Date).getTime() } }]), Date.prototype.getWeek = function () { var e = new Date(this.getFullYear(), 0, 1); return Math.ceil(((this - e) / 864e5 + e.getDay() + 1) / 7) }, setMessage = function (e, n, o) { e.message = o, e.showMessage = !0, n(function () { e.showMessage = !1 }, 5e3) }; var agroApp = angular.module("AgroApp"); agroApp.controller("loginController", function (e, n, o) { e.userDetails = {}, e.showloading = !1, e.showError = !1, e.goLogin = function () { e.showloading = !0, o.get("/api/user/login/" + e.userDetails.email + "/" + e.userDetails.password).success(function (n) { "false" != n ? window.location.href = n : (e.showloading = !1, e.showError = !0, e.errorMessage = "De opgegeven combinatie is incorrect") }).error(function () { e.showloading = !1, e.showError = !0, e.errorMessage = "Er is iets misgegaan! Probeer het opnieuw of neem contact op met een administrator" + data }) }, e.goRegister = function () { e.showloading = !0, o({ method: "GET", url: "/api/user/register/" + e.userDetails.email + "/" + e.userDetails.password + "/" + e.userDetails.fullname + "/" + e.userDetails.rol, params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (n) { "true" == n ? window.location.href = "/admin/gebruikers" : (e.showloading = !1, e.showError = !0, e.errorMessage = "De opgegeven combinatie is incorrect") }).error(function () { e.showloading = !1, e.showError = !0, e.errorMessage = "Er is iets misgegaan! Probeer het opnieuw of neem contact op met een administrator" }) } }); var agroApp = angular.module("AgroApp"); agroApp.controller("Navigation", function (e, n, o, r) { r.showloading = !1, r.changeView = function (e) { r.showLoading = !0, window.location.href = "../../../" + e }, e.goLogout = function () { r.showloading = !0, o({ method: "GET", url: "/api/login/logout", params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).then(function (e) { window.location.href = "/" }, function (e) { window.location.href = "/" }) } }); var agroApp = angular.module("AgroApp"); agroApp.controller("PlanningView", function (e) { }), agroApp.factory("getUsers", function () { return function () { $http({ method: "GET", url: "/api/user/getallegebruikers", params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (e) { return e }) } }), agroApp.factory("getCustomers", function () { return function () { $http({ method: "GET", url: "/api/werkbon/getklanten", params: "limit=10, sort_by=created:desc", headers: { Authorization: "Token token=xxxxYYYYZzzz" } }).success(function (e) { return e }) } });